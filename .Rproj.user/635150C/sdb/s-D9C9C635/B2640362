{
    "collab_server" : "",
    "contents" : "library(xtable)\nlibrary(HardyWeinberg)\nlibrary(genetics)\nlibrary(LDheatmap)\n\n\nload(\"~/FIB - Erasmus/BSG/Parte 2/HW3/ABO-CHB.rda\")\n\nuno = as.data.frame(matrix(0, nrow = 1, ncol = 3))\nindiv = nrow(Z)\nsnps = ncol(Z)\nperc = (100 * length(which(is.na(Z))))/length(Z)\nuno[1,] = c(indiv, snps, perc)\ncolnames(uno) = c(\"Number of individuals\", \"Number of SNPs\", \"percentage of missing data\")\nxtable(uno)\n\nunlist(table(Z[7,]))\nmat = matrix(nrow = 45, ncol = 3)\nfor (x in 1:nrow(Z)){\n  if(alleles[x] == \"A/G\"){\n    line = c(table(Z[x,])[\"AA\"], table(Z[x,])[\"AG\"], table(Z[x,])[\"GG\"])\n  }\n  else if(alleles[x] == \"A/C\"){\n    line = c(table(Z[x,])[\"AA\"], table(Z[x,])[\"AC\"], table(Z[x,])[\"CC\"])\n  }\n  else if(alleles[x] == \"A/T\"){\n    line = c(table(Z[x,])[\"AA\"], table(Z[x,])[\"AT\"], table(Z[x,])[\"TT\"])\n  }\n  else if(alleles[x] == \"C/G\"){\n    line = c(table(Z[x,])[\"CC\"], table(Z[x,])[\"CG\"], table(Z[x,])[\"GG\"])\n  }\n  else if(alleles[x] == \"C/T\"){\n    line = c(table(Z[x,])[\"CC\"], table(Z[x,])[\"CT\"], table(Z[x,])[\"TT\"])\n  }\n  else if(alleles[x] == \"G/T\"){\n    line = c(table(Z[x,])[\"GG\"], table(Z[x,])[\"GT\"], table(Z[x,])[\"TT\"])\n  }\n  mat[x,] = line\n}\n\nmat[is.na(mat)] = 0\nout = HWTernaryPlot(mat)\n\nSNP1 = genotype(Z[1,], sep = \"\")\nSNP2 = genotype(Z[2,], sep = \"\")\nld = LD(SNP1, SNP2)\n\ndue = as.data.frame(matrix(0, nrow = 2, ncol = 4))\n\naf = function(data){\n  freqG = (length(which(data == \"G/G\")) * 2 + length(which(data == \"G/A\")))/((length(which(data == \"G/G\")) + length(which(data == \"G/A\")) + length(which(data == \"A/A\")))*2)\n  freqA = (length(which(data == \"A/A\")) * 2 + length(which(data == \"G/A\")))/((length(which(data == \"G/G\")) + length(which(data == \"G/A\")) + length(which(data == \"A/A\")))*2)\n  out = c(freqG, freqA)\n  return(out)\n}\npA = af(SNP1)[1]\npa = af(SNP1)[2]\npB = af(SNP2)[1]\npb = af(SNP2)[2]\n\nD = ld$D\nD_max = min(pA*pB, pa*pb) \nD_primo = D/D_max\nchi.square = unname(D^2 * 2 * indiv)/(pA*pB*pa*pb)\nR.squared = chi.square/(2*indiv) \nr = sqrt(R.squared)\n\ndue[1,] = c(ld$`D'`, ld$`X^2`, ld$`R^2`, ld$r)\ndue[2,] = c(D_primo, chi.square, R.squared, r)\ncolnames(due) = c(\"D'\", \"chi^2\", \"R^2\", \"r\")\nxtable(due)\n\n\ntre = as.data.frame(matrix(nrow = 2, ncol = 2))\ntre[1,1] = pA*pB + D\ntre[1,2] = pA*pb - D\ntre[2,1] = pa*pB - D\ntre[2,2] = pa*pb + D\nxtable(tre)\n\nquattro = as.data.frame(matrix(nrow = (indiv^2-indiv)/2, ncol = 4))\ns = 1\nfor (k in 1:(nrow(Z)-1)){\n  #print(k)\n  for (t in k+1:(nrow(Z)-k)){\n    #print(paste(\"secondo\",t))\n    mod = LD(genotype(Z[k,], sep = \"\"), genotype(Z[t,], sep = \"\"))\n    quattro[s,] = c(mod$D, mod$`D'`, mod$`X^2`, mod$`R^2`)\n    s = s + 1\n  }\n}\ncolnames(quattro) = c(\"D\", \"D'\", \"X^2\", \"R^2\")\npairs(quattro)\n\n\n#8. dovrebbe venire una cosa tipo la slide 20 boh, forse calcolo male la distanza\ndistancer2 = as.data.frame(matrix(nrow = (indiv^2-indiv)/2, ncol = 2))\ns = 1\nfor (k in 1:(nrow(Z)-1)){\n  #print(k)\n  for (t in k+1:(nrow(Z)-k)){\n    #print(paste(\"secondo\",t))\n    mod = LD(genotype(Z[k,], sep = \"\"), genotype(Z[t,], sep = \"\"))\n    dist = pos[t]-pos[k]\n    distancer2[s,] = c(dist, mod$`R^2`)\n    s = s + 1\n  }\n}\nplot((distancer2[,1]), distancer2[,2], xlab=\"Distance\", ylab=\"R^2\")\n\n#9.\nRES <- data.frame(genotype(Z[1,],sep=\"\"))\n\nfor(i in 2:nrow(Z)) {\n  snp <- genotype(Z[i,],sep=\"\")\n  RES <- cbind(RES,snp)\n}\n\nrgb.palette <- colorRampPalette(rev(c(\"blue\", \"orange\", \"red\")), space = \"rgb\")\npar(mfrow = c(1,2))\nLDheatmap(RES,LDmeasure=\"r\",color=rgb.palette(18))\nLDheatmap(RES,LDmeasure=\"D'\",color=rgb.palette(18))\n\n\n\n#10.\naf = function(data){\n  out = c()\n  for (row in 1:nrow(data)){\n    freqA = (data[row,1] * 2 + data[row,2])/((data[row,1] + data[row,2] + data[row,3])*2) \n    out[row] = freqA\n  }\n  return(out)\n}\n\np1 = af(mat)\nS = HWData(45, nm = 45, p = p1)\nps = af(S)\n\ngenmat=as.data.frame(matrix(nrow = 45, ncol = 45))\nfor(i in 1:nrow(S)) {\n  riga=c(rep(0, S[i,1]), rep(1, S[i,2]), rep(2, S[i,3]))\n  genmat[,i]=as.genotype.allele.count(riga)\n}\n\n\nLDheatmap(genmat,LDmeasure=\"D'\",color=rgb.palette(18))\nLDheatmap(genmat,LDmeasure=\"r\",color=rgb.palette(18))\n\n\n",
    "created" : 1513348278961.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "640002434",
    "id" : "B2640362",
    "lastKnownWriteTime" : 1512138888,
    "last_content_update" : 1512138888,
    "path" : "C:/Users/Vincenzo/Desktop/FIB/BSG/SG/Lecture3/HW3/HW3.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}